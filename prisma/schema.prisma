// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  // Serverless/runtime traffic -> Prisma Accelerate (your pooled URL)
  url = env("BACKEND_PRISMA_DATABASE_URL")

  // Migrations/seed -> direct Postgres URL (no pooler)
  directUrl = env("BACKEND_POSTGRES_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @default("User")
  email     String   @unique
  password  String
  folders   Folder[]
  createdAt DateTime @default(now())
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  color     String   @default("#FF8C00")
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  task      Task[]
  createdAt DateTime @default(now())
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus   @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  archived    Boolean      @default(false)
  folderId    Int
  folder      Folder       @relation(fields: [folderId], references: [id])
  createdAt   DateTime     @default(now())
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
